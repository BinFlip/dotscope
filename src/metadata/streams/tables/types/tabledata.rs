use crate::metadata::streams::{
    AssemblyOsRaw, AssemblyProcessorRaw, AssemblyRaw, AssemblyRefOsRaw, AssemblyRefProcessorRaw,
    AssemblyRefRaw, ClassLayoutRaw, ConstantRaw, CustomAttributeRaw, DeclSecurityRaw, EventMapRaw,
    EventRaw, ExportedTypeRaw, FieldLayoutRaw, FieldMarshalRaw, FieldRaw, FieldRvaRaw, FileRaw,
    GenericParamConstraintRaw, GenericParamRaw, ImplMapRaw, InterfaceImplRaw, ManifestResourceRaw,
    MemberRefRaw, MetadataTable, MethodDefRaw, MethodImplRaw, MethodSemanticsRaw, MethodSpecRaw,
    ModuleRaw, ModuleRefRaw, NestedClassRaw, ParamRaw, PropertyMapRaw, PropertyRaw,
    StandAloneSigRaw, TypeDefRaw, TypeRefRaw, TypeSpecRaw,
};

#[allow(missing_docs)]
/// Represents all possible tables in a '#~' CIL heap
pub enum TableData<'a> {
    Module(MetadataTable<'a, ModuleRaw>),
    TypeRef(MetadataTable<'a, TypeRefRaw>),
    TypeDef(MetadataTable<'a, TypeDefRaw>),
    Field(MetadataTable<'a, FieldRaw>),
    MethodDef(MetadataTable<'a, MethodDefRaw>),
    Param(MetadataTable<'a, ParamRaw>),
    InterfaceImpl(MetadataTable<'a, InterfaceImplRaw>),
    MemberRef(MetadataTable<'a, MemberRefRaw>),
    Constant(MetadataTable<'a, ConstantRaw>),
    CustomAttribute(MetadataTable<'a, CustomAttributeRaw>),
    FieldMarshal(MetadataTable<'a, FieldMarshalRaw>),
    DeclSecurity(MetadataTable<'a, DeclSecurityRaw>),
    ClassLayout(MetadataTable<'a, ClassLayoutRaw>),
    FieldLayout(MetadataTable<'a, FieldLayoutRaw>),
    StandAloneSig(MetadataTable<'a, StandAloneSigRaw>),
    EventMap(MetadataTable<'a, EventMapRaw>),
    Event(MetadataTable<'a, EventRaw>),
    PropertyMap(MetadataTable<'a, PropertyMapRaw>),
    Property(MetadataTable<'a, PropertyRaw>),
    MethodSemantics(MetadataTable<'a, MethodSemanticsRaw>),
    MethodImpl(MetadataTable<'a, MethodImplRaw>),
    ModuleRef(MetadataTable<'a, ModuleRefRaw>),
    TypeSpec(MetadataTable<'a, TypeSpecRaw>),
    ImplMap(MetadataTable<'a, ImplMapRaw>),
    FieldRVA(MetadataTable<'a, FieldRvaRaw>),
    Assembly(MetadataTable<'a, AssemblyRaw>),
    AssemblyProcessor(MetadataTable<'a, AssemblyProcessorRaw>),
    AssemblyOS(MetadataTable<'a, AssemblyOsRaw>),
    AssemblyRef(MetadataTable<'a, AssemblyRefRaw>),
    AssemblyRefProcessor(MetadataTable<'a, AssemblyRefProcessorRaw>),
    AssemblyRefOS(MetadataTable<'a, AssemblyRefOsRaw>),
    File(MetadataTable<'a, FileRaw>),
    ExportedType(MetadataTable<'a, ExportedTypeRaw>),
    ManifestResource(MetadataTable<'a, ManifestResourceRaw>),
    NestedClass(MetadataTable<'a, NestedClassRaw>),
    GenericParam(MetadataTable<'a, GenericParamRaw>),
    MethodSpec(MetadataTable<'a, MethodSpecRaw>),
    GenericParamConstraint(MetadataTable<'a, GenericParamConstraintRaw>),
}
